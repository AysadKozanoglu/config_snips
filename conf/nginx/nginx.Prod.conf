worker_processes auto;
worker_rlimit_nofile 100000;



events {
    # determines how much clients will be served per worker
    # max clients = worker_connections * worker_processes
    # max clients is also limited by the number of socket connections available on the system (~64k)
    worker_connections 4000;

    # optmized to serve many clients with each thread, essential for linux
    use epoll;

    # accept as many connections as possible, may flood worker connections if set too low
    multi_accept on;
}



http {

    limit_req_zone $binary_remote_addr zone=login:10m rate=20r/s;
    server_names_hash_bucket_size 64;

	include       mime.types;
	default_type  application/octet-stream;
	server_tokens off;

        add_header X-Frame-Options SAMEORIGIN;
	client_max_body_size 2M;
	# cache informations about FDs, frequently accessed files
	# can boost performance, but you need to test those values

	open_file_cache max=200000 inactive=20s; 
	open_file_cache_valid 30s; 
	open_file_cache_min_uses 2;
	open_file_cache_errors on;

	# copies data between one FD and other from within the kernel
	# faster then read() + write()
	sendfile on;

	# send headers in one peace, its better then sending them one by one 
	tcp_nopush on;

	# don't buffer data sent, good for small data bursts in real time
	tcp_nodelay on;

	# server will close connection after this time
	keepalive_timeout 30;

	# number of requests client can make over keep-alive -- for testing
	keepalive_requests 100000;

	# allow the server to close connection on non responding client, this will free up memory
	reset_timedout_connection on;

	# request timed out -- default 60
	client_body_timeout 10;

	# if client stop responding, free up memory -- default 60
	send_timeout 2;


    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;


gzip on; 
gzip_disable "msie6"; 
gzip_vary on; 
gzip_proxied any; 
gzip_comp_level 6; 
gzip_min_length 1100; 
gzip_buffers 16 8k; 
gzip_http_version 1.1; 
gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
 	    limit_req zone=login burst=20;
            index  index.php index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
        error_page   500 502 503 504  /50x.html;
	
	location /source {
	root /usr/local/nginx/html;
	autoindex   on;
	}

 	location ~ \.php$ {
                        try_files $uri =404;
                        fastcgi_index index.php;
                        fastcgi_pass unix:/var/run/php5-fpm.sock;
                        include fastcgi_params;
                        fastcgi_keep_conn on;
                        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
                }

    }
include /usr/local/nginx/conf/reserved.conf;
include /usr/local/nginx/conf/virtual-servers/*.conf;

}

